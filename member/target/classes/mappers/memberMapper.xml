<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis-congif에서 긁 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!--
 추가 할 경우 추가 순서: mapper->DAOImpl->Service->ServiceImpl->Controller  
 -->
 <!-- 다른 mapper와 중복되지 않도록 namespace 작성 -->
 <mapper namespace="member">
 	<select id = "memberList" resultType="com.spring.domain.MemberVO">
 	<!-- ㄴ 조회의 이름이 memberList 결과는 DTO(레코드)단위 처리 -->
	<!-- SELECT 필드명, 필드명 FROM 테이블명 WHERE 조건 ORDER BY 정렬 -->
 		SELECT
 			userId,
 			userName,
 			userEmail,
 			userRegdate
 		FROM member
 		ORDER BY userName
 	</select>
 	<!-- 저장하는 질의어 -->
 	<insert id="memberInsert" parameterType="com.spring.domain.MemberVO"> <!-- id는 사용자가 임의로 JSP-Controller-mapper -->
 		<!-- ㄴ MemberVo형식으로 값을 가져온다 -->
 		<!-- INSERT INTO 테이블명(필드명) values(값) -->
 		INSERT INTO member(userId, userPw, userName, userEmail)
 		values (#{userId},#{userPw},#{userName},#{userEmail})
 		<!-- Form input 이름만큼 작성, DTO에 저장된 값을 해당필드에 입력 -->
 	</insert>
 	<!-- 개별조회 -->
 	<select id="memberView" parameterType="String" resultType="com.spring.domain.MemberVO">
 	 SELECT userId, userPw, userName, userEmail
 	 FROM member
 	 WHERE userId = #{userId}
 	</select>
 	
 	<!-- UPDATE 테이블명 SET 필드명=값, 필드명=값 WHERE 조건 -->
 	<!-- JSP에서는 달러 mapper에서는 #사용 -->
 	<update id="memberUpdate" parameterType="com.spring.domain.MemberVO">
 	UPDATE member SET
 		userPw=#{userPw},
 		userName=#{userName},
 		userEmail=#{userEmail}
 	WHERE userId=#{userId}
 	</update>
 	
 	<!-- DELETE FROM 테이블명 WHERE 조건 -->
 	<delete id="memberDelete" parameterType="String">
 		DELETE FROM member WHERE userId=#{userId}
 	</delete>
 </mapper>